<?php/** * Database Table Name. * * @apt_service * @apt_timeslot * @apt_dateslot * */// 1.apt_service database tableglobal $wpdb, $table_prefix;$apt_service = $table_prefix . "apt_service";global $apt_service;if ($wpdb->get_var("show tables like \"$apt_service\" ") != $apt_service) {    $sql_service = "CREATE TABLE " . $apt_service . " (service_id mediumint(10) NOT NULL AUTO_INCREMENT,service_name varchar(255) NOT NULL,service_price varchar(255) NOT NULL,service_date	date	NOT NULL,service_rand int(10) NOT NULL,UNIQUE KEY service_id (service_id)) CHARSET=utf8 ;";    $wpdb->query($sql_service);}// 2. apt_timeslot database table$apt_timeslot = $table_prefix . "apt_timeslot";global $apt_timeslot;if ($wpdb->get_var("show tables like \"$apt_timeslot\" ") != $apt_timeslot) {    $sql_timeslot = "CREATE TABLE " . $apt_timeslot . " (timeslot_id int(11) NOT NULL AUTO_INCREMENT,service_id int(11)  NOT NULL,timeslot_day varchar(100)  NOT NULL,timeslot_start_time varchar(100) NOT NULL,timeslot_end_time varchar(100) NOT NULL,timeslot_date	date	NOT NULL,timeslot_rand int(10) NOT NULL,booking_number_time int(10) NOT NULL,UNIQUE KEY timeslot_id (timeslot_id) ) CHARSET=utf8 ;";    $wpdb->query($sql_timeslot);}// 3. apt_dateslot database table$apt_dateslot = $table_prefix . "apt_dateslot";global $apt_dateslot;if ($wpdb->get_var("show tables like \"$apt_dateslot\" ") != $apt_dateslot) {    $sql_dateslot = "CREATE TABLE " . $apt_dateslot . " (DSID int(11) NOT NULL AUTO_INCREMENT,service_id int(11)  NOT NULL,dsi_str_date varchar(100)  NOT NULL,dsi_end_date varchar(100)  NOT NULL,dsi_sun varchar(100)  NOT NULL,dsi_mon varchar(100) NOT NULL,dsi_tue varchar(100) NOT NULL,dsi_wed varchar(100) NOT NULL,dsi_thu varchar(100) NOT NULL,dsi_fri varchar(100) NOT NULL,dsi_sat varchar(100) NOT NULL,timeslot_date	date	NOT NULL,timeslot_rand int(10) NOT NULL,UNIQUE KEY DSID (DSID) ) CHARSET=utf8 ;";    $wpdb->query($sql_dateslot);}// 4. appointment_data database table$appointment_data = $table_prefix . "appointment_data";global $appointment_data;if ($wpdb->get_var("show tables like \"$appointment_data\" ") != $appointment_data) {    $sql_apt_data = "CREATE TABLE " . $appointment_data . " (APTID int(11) NOT NULL AUTO_INCREMENT,service_id int(11)  NOT NULL,apt_data_date varchar(100)  NOT NULL,apt_data_persion_name varchar(100)  NOT NULL,apt_data_service_name varchar(100)  NOT NULL,apt_data_time varchar(100)  NOT NULL,apt_data_price varchar(100)  NOT NULL,apt_data_email varchar(100)  NOT NULL,apt_data_mobile varchar(100)  NOT NULL,apt_data_message varchar(255)  NOT NULL,apt_data_rand int(10) NOT NULL,apt_data_current_date varchar(100) NOT NULL,apt_payment_method varchar(50) NOT NULL,ddmmyyy INT(11) NOT NULL,UNIQUE KEY APTID (APTID) ) CHARSET=utf8 ;";    $wpdb->query($sql_apt_data);}// 5. apt_transaction database table$apt_transaction = $table_prefix . "apt_transaction";global $apt_transaction;if ($wpdb->get_var("show tables like \"$apt_transaction\" ") != $apt_transaction) {    $sql_txn_data = "CREATE TABLE " . $apt_transaction . " (TXNID int(11) NOT NULL AUTO_INCREMENT,TXN_ID int(11) NOT NULL ,service_id int(11)  NOT NULL,apt_txn_booking_date varchar(100)  NOT NULL,apt_txn_service_name varchar(100)  NOT NULL,apt_txn_price varchar(100)  NOT NULL,apt_txn_payer_email varchar(100)  NOT NULL,apt_txn_txnid varchar(50)  NOT NULL,apt_txn_status varchar(100)  NOT NULL,apt_data_rand int(10) NOT NULL,UNIQUE KEY TXNID (TXNID) ) CHARSET=utf8 ;";    $wpdb->query($sql_txn_data);}// 6. apt_currency database tableglobal $wpdb, $table_prefix, $apt_currency;$apt_currency = $table_prefix . 'apt_currency';if ($wpdb->get_var("SHOW TABLES LIKE \"$apt_currency\"") != $apt_currency) {    $apt_currency_table = "CREATE TABLE " . $apt_currency . "(                apt_c_id int(8) NOT NULL AUTO_INCREMENT,                apt_c_name varchar(100) NOT NULL,                apt_c_code varchar(10) NOT NULL,                apt_c_symbol varchar(10) NOT NULL,                apt_c_des varchar(500) NOT NULL,                PRIMARY KEY c_id(apt_c_id)        )";    $wpdb->query($apt_currency_table);    $currency_file = CSV_PATH . "currency.csv";    $currency = fopen($currency_file, 'r');    $theData = fgets($currency);    $i = 0;    while (!feof($currency)) {        $currency_data[] = fgets($currency, 1024);        $currency_array = explode(",", $currency_data[$i]);        $insert_currency = array();        $insert_currency['apt_c_id'] = $currency_array[0];        $insert_currency['apt_c_name'] = $currency_array[1];        $insert_currency['apt_c_code'] = $currency_array[2];        $insert_currency['apt_c_symbol'] = $currency_array[3];        $insert_currency['apt_c_des'] = $currency_array[4];        $wpdb->insert($apt_currency, $insert_currency);        $i++;    }    fclose($currency);}//get option dataif (!get_option('apt_currency_symbol')) {    add_option('apt_currency_symbol', '$');}if (!get_option('apt_currency_code')) {    add_option('apt_currency_code', 'USD');}if (!get_option('apt_merchaint_email')) {    add_option('apt_merchaint_email', '');}if (!get_option('apt_paypal')) {    add_option('apt_paypal', 'cash');}if (!get_option('return_apt_url')) {    add_option('return_apt_url', 'return_paypal_url');}if (!get_option('apt_form_head')) {    add_option('apt_form_head', 'Book Your Appointment');}if (!get_option('apt_fix_date')) {    add_option('apt_fix_date', 'Fix Appointment Date');}if (!get_option('apt_custom_msg')) {    add_option('apt_custom_msg', 'Your Custom Message');}if (!get_option('cpt_enable')) {    add_option('cpt_enable', 'on');}?>